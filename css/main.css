:root {
    --clr-primary-200: #f3eed9;
    --clr-primary-400: #824936;
    --clr-neutral-100: #fff;
    --clr-neutral-900: #222c2a;
    --ff-primary: "Roboto", sans-serif;
    --ff-accent: "Playfair Display", serif;
}

*,
*::after,
*::before {
    box-sizing: border-box;
}

body,
h1,
h2,
h3,
p {
    margin: 0;
}

h2,
h3,
p {
    margin-bottom: 1em;
}

img {
    display: block;
    max-width: 100%;
    /* If the screen size is below the img width then it makes the image shrink to 100% of screen width */
}

body {
    font-size: 1.3125rem;
    font-family: var(--ff-primary);
    font-weight: 400;
    line-height: 1.6;
}

h1,
h2,
h3 {
    color: var(--clr-primary-400);
    font-family: var(--ff-accent);
    line-height: 1;
    font-weight: 900;
    /* margin-bottom: 1em; */
}

header,
section {
    padding: 4rem 0;
}

@media (min-width: 40em) {
    header,
    section {
        padding: 7rem 0;
    }
}

.text-center {
    text-align: center;
}

.container {
    /* applies margin only on left and right; */
    margin-inline: auto;
    /* `margin-block` helps to apply margin on top and bottom  */
    width: min(90%, 70.5rem)
    /* min width is 90% and max width is 70.5rem */
}

.container--narrow {
    max-width: 35rem;
}

.bg-light {
    background-color: var(--clr-primary-200);
}

.bg-primary {
    color: var(--clr-neutral-100);
    background-color: var(--clr-primary-400);
}

.bg-dark {
    background-color: var(--clr-neutral-900);
    color: var(--clr-neutral-100);
}

.bg-primary h2,
.bg-dark h2 {
    color: var(--clr-primary-200)
}

.split {
    display: flex;
    flex-direction: column;
    /* Column direction makes it compatible for mobiles */
}


/* 40em = 640px For screens above and equal to 640px */

@media (min-width: 40em) {
    .split {
        flex-direction: row;
    }
    .split>* {
        flex-basis: 100%;
        /* If you want all the children inside the flexbox to have equal width */
    }
    /* Any element that has a sibling before it, then margin will be applied */
    .split>*+* {
        margin-left: 2em;
        /* Gap prop isnt used here because gap doesnt work on firefox */
    }
}